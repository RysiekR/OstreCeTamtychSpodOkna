using System.Threading.Tasks;
Player player = new();

Task playMusic = new Task(() => { while (true) { musicLibrary.Mario(); } });

playMusic.Start();

//inicializacja wyswietlania mapy i wsadzenie gracza na mape
Display.Initialize(Display.baseMapBig,player);

// !!! ACHTUNG ! ACHTUNG !!! endless loop
//oddanie kontroli nad pozycja gracza w rece gracza
while (true) 
{

    player.UpdatePos(Display.baseMapBig);
    
}
class Player
{
    public int row = 3;
    public int col = 5;
    public void UpdatePos(string[] jakaMapa)
    {
        int oldRow = row;
        int oldCol = col;
        bool hitObstacle = false;
/*        bool isShop = false;
        bool isGrass = false;
*/
        switch (Console.ReadKey(true).Key)
        {
            case ConsoleKey.W :
                if(!(jakaMapa[row-1][col] == 'W')) { row--; }
                else { hitObstacle = true; }
                break;
            case ConsoleKey.S:
                if (!(jakaMapa[row + 1][col] == 'W')) { row++; }
                else { hitObstacle = true; }     
                break;
            case ConsoleKey.A:
                if (!(jakaMapa[row][col - 1] == 'W')) { col--; }
                else { hitObstacle = true; }
                break;
            case ConsoleKey.D:
                if (!(jakaMapa[row][col + 1] == 'W')) { col++; }
                else { hitObstacle = true; }
                break;
        }
        Console.SetCursorPosition(this.col, this.row);
        Console.Write("#");

        //if wall was not hit remember to clear old position
        if (!hitObstacle)
        {
            Console.SetCursorPosition(oldCol, oldRow);
            Console.Write(" ");
            hitObstacle = false;
        }


    }
}

class Display
{
    //no mapa kurwa
    public static readonly string[] baseMap =
{
    "WWWWWWWWWWWW",
    "W          W",
    "W          W",
    "W          W",
    "W          W",
    "W          W",
    "W          W",
    "W          W",
    "W          W",
    "WWWWWWWWWWWW",
};
    public static readonly string[] baseMapBig =
{
    "WWWWWWWWWWWWWWWWWWWWWWWWW",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "W                       W",
    "WWWWWWWWWWWWWWWWWWWWWWWWW",
};

    public static void Initialize(string[] map,Player gracz)
    {

        //narysowanie mapy "row by row"
        foreach (string row in map)
        {
            Console.WriteLine(row);

        }

        //wrzucenie gracza na mape
        Console.SetCursorPosition(gracz.col, gracz.row);
        Console.Write("#");
        Console.CursorVisible = false;
    }
}


public class musicLibrary()
{
    public static void Mario()
    {
        if (OperatingSystem.IsWindows())
        {
            Console.Beep(659, 125);
            Console.Beep(659, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(523, 125);
            Console.Beep(659, 125);
            Thread.Sleep(125);
            Console.Beep(784, 125);
            Thread.Sleep(375);
            Console.Beep(392, 125);
            Thread.Sleep(375);
            Console.Beep(523, 125);
            Thread.Sleep(250);
            Console.Beep(392, 125);
            Thread.Sleep(250);
            Console.Beep(330, 125);
            Thread.Sleep(250);
            Console.Beep(440, 125);
            Thread.Sleep(125);
            Console.Beep(494, 125);
            Thread.Sleep(125);
            Console.Beep(466, 125);
            Thread.Sleep(42);
            Console.Beep(440, 125);
            Thread.Sleep(125);
            Console.Beep(392, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(125);
            Console.Beep(784, 125);
            Thread.Sleep(125);
            Console.Beep(880, 125);
            Thread.Sleep(125);
            Console.Beep(698, 125);
            Console.Beep(784, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(125);
            Console.Beep(523, 125);
            Thread.Sleep(125);
            Console.Beep(587, 125);
            Console.Beep(494, 125);
            Thread.Sleep(125);
            Console.Beep(523, 125);
            Thread.Sleep(250);
            Console.Beep(392, 125);
            Thread.Sleep(250);
            Console.Beep(330, 125);
            Thread.Sleep(250);
            Console.Beep(440, 125);
            Thread.Sleep(125);
            Console.Beep(494, 125);
            Thread.Sleep(125);
            Console.Beep(466, 125);
            Thread.Sleep(42);
            Console.Beep(440, 125);
            Thread.Sleep(125);
            Console.Beep(392, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(125);
            Console.Beep(784, 125);
            Thread.Sleep(125);
            Console.Beep(880, 125);
            Thread.Sleep(125);
            Console.Beep(698, 125);
            Console.Beep(784, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(125);
            Console.Beep(523, 125);
            Thread.Sleep(125);
            Console.Beep(587, 125);
            Console.Beep(494, 125);
            Thread.Sleep(375);
            Console.Beep(784, 125);
            Console.Beep(740, 125);
            Console.Beep(698, 125);
            Thread.Sleep(42);
            Console.Beep(622, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(415, 125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Thread.Sleep(125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Console.Beep(587, 125);
            Thread.Sleep(250);
            Console.Beep(784, 125);
            Console.Beep(740, 125);
            Console.Beep(698, 125);
            Thread.Sleep(42);
            Console.Beep(622, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(698, 125);
            Thread.Sleep(125);
            Console.Beep(698, 125);
            Console.Beep(698, 125);
            Thread.Sleep(625);
            Console.Beep(784, 125);
            Console.Beep(740, 125);
            Console.Beep(698, 125);
            Thread.Sleep(42);
            Console.Beep(622, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(415, 125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Thread.Sleep(125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Console.Beep(587, 125);
            Thread.Sleep(250);
            Console.Beep(622, 125);
            Thread.Sleep(250);
            Console.Beep(587, 125);
            Thread.Sleep(250);
            Console.Beep(523, 125);
            Thread.Sleep(1125);
            Console.Beep(784, 125);
            Console.Beep(740, 125);
            Console.Beep(698, 125);
            Thread.Sleep(42);
            Console.Beep(622, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(415, 125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Thread.Sleep(125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Console.Beep(587, 125);
            Thread.Sleep(250);
            Console.Beep(784, 125);
            Console.Beep(740, 125);
            Console.Beep(698, 125);
            Thread.Sleep(42);
            Console.Beep(622, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(698, 125);
            Thread.Sleep(125);
            Console.Beep(698, 125);
            Console.Beep(698, 125);
            Thread.Sleep(625);
            Console.Beep(784, 125);
            Console.Beep(740, 125);
            Console.Beep(698, 125);
            Thread.Sleep(42);
            Console.Beep(622, 125);
            Thread.Sleep(125);
            Console.Beep(659, 125);
            Thread.Sleep(167);
            Console.Beep(415, 125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Thread.Sleep(125);
            Console.Beep(440, 125);
            Console.Beep(523, 125);
            Console.Beep(587, 125);
            Thread.Sleep(250);
            Console.Beep(622, 125);
            Thread.Sleep(250);
            Console.Beep(587, 125);
            Thread.Sleep(250);
            Console.Beep(523, 125);
            Thread.Sleep(625);
        }
    }

    public static void Tetris()
    {
        if (OperatingSystem.IsWindows())
        {

        }
    }
}
